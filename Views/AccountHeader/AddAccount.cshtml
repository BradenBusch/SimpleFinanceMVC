
@{
    ViewData["Title"] = "Create Account";
}

@model AddAccountViewModel
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<script type="text/javascript">
    function validateForm(e) {
        if ($("#AccountName").val().includes(',')) {
            alert("No Commas are allowed in the Account Name field. Try again.");
            return false;
        }
    }
</script>

<div class="container">
    <div class="text-center">
        <h1 class="display-4">Add A New Account</h1>
    </div>
    <form asp-action="SaveAccount" asp-controller="AccountHeader" onsubmit="return validateForm(Event)">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        @Html.LabelFor(m => m.AccountName, new { @class = "add-account-label" })
        <input id="AccountName" required class="form-control mb-3" type="text" placeholder="ex: Wells Fargo" asp-for="AccountName" />
        <span asp-validation-for="AccountName"></span>

        @Html.LabelFor(m => m.AccountType, new { @class = "add-account-label" })
        <input required class="form-control mb-3" type="text" placeholder="ex: Savings" asp-for="AccountType" />
        <span asp-validation-for="AccountType"></span>

        @Html.LabelFor(m => m.AccountValue, new { @class = "add-account-label" })
        <input required class="form-control mb-3" type="number" step=".01" placeholder="ex: 928.23" asp-for="AccountValue" />
        <span asp-validation-for="AccountValue"></span>

        @Html.LabelFor(m => m.AccountDescription, new { @class = "add-account-label" })
        <input class="form-control mb-3" type="text" placeholder="Extra info" asp-for="AccountDescription" />

        <div class="d-inline justify-content-between">
            <button id="SubmitBtn" class="btn btn-primary" type="submit">Save</button>
            @Html.ActionLink("Cancel", "AccountHome", "AccountHeader", new { }, new { @class = "btn btn-danger" })
        </div>
    </form>
</div>

