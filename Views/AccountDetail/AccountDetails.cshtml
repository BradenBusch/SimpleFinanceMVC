@using SimpleFinance.ViewModels
@{
    ViewData["Title"] = "Account Details";
}
 @model AccountDetailsViewModel

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<script type="text/javascript" src="~/js/account-detail.js"></script>

@*Embed Chart Data as hidden. This is so we can access it in JS *@
@for (int i = 0; i < Model.ChartAccountDetails.Count; i++)
{
    @Html.HiddenFor(model => Model.ChartAccountDetails[i].AccountValue, new { @class = "hidden-chart-details-value"})
    @Html.HiddenFor(model => Model.ChartAccountDetails[i].CreateDate, new { @class = "hidden-chart-details-date" })   
}

<div class="align-content-center">
    <div style="margin-left: 20%; margin-right: 20%;">
        <h3 class="d-flex justify-content-center">
            Account Details
        </h3>
        <div class="mt-4 w-100 d-inline-flex justify-content-lg-between">
            <div>
                <div class="account-name">
                    @Model.AccountHeader.AccountName
                </div>
                <div class="account-name">
                    @Model.AccountHeader.AccountType
                </div>

            </div>
            <div class="number account-value-lg">
                $@Model.AccountHeader.AccountValue
            </div>
            <div>
                <form asp-action="SaveAccountDetail" asp-controller="AccountDetail">
                    @Html.HiddenFor(m => m.AccountHeaderId)
                    
                    @Html.LabelFor(m => m.AccountValue, new { @class = "account-type" })
                    <input class="form-control mb-3 w-auto" type="number" value=@Model.AccountHeader.AccountValue step=".01" placeholder="@Model.AccountHeader.AccountValue" asp-for="AccountValue" />

                    <div class="d-inline justify-content-between">
                        <button class="btn btn-primary w-100" type="submit">Update Account Balance</button>
                    </div>
                </form>
            </div>
        </div>
        <div id="ChartContainer">
            <canvas id="myChart" ref="canvasRef" style="max-height: 400px;max-width: 800px;"></canvas>
        </div>
        <div class="m-4">
            <div>
                Account Change ($): @Model.AccountAmountChange
            </div>
            <div>
                Account Change (%): @Model.AccountPercentageChange
            </div>
        </div>

        <div class="account-type mt-4">
            Balance History
        </div>
        <div>
            @foreach (var accountDetail in Model.AccountDetails)
            {
                <div class="card mb-1">
                    <div class="card-body d-inline-flex justify-content-start gap-3 w-100">
                        <div class="account-detail-card number">
                            $@accountDetail.AccountValue
                        </div>
                        <div class="account-detail-card">
                            @accountDetail.CreateDate
                        </div>
                        <div class="trash-icon">
                            <a href="@Url.Action("DeleteAccountDetail", "AccountDetail", new { accountDetailId = @accountDetail.AccountDetailId, accountHeaderId = @accountDetail.AccountHeaderId })">
                                <i class="fa fa-trash-o" style="font-size:20px;color:red"></i>
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>


